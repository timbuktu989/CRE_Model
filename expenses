from datetime import date

class Expense:
    def __init__(self, expense_type, expense_amount, expense_frequency, expense_growth_rate):
        self.expense_type = expense_type
        self.expense_amount = expense_amount
        self.expense_frequency = expense_frequency
        self.expense_growth_rate = expense_growth_rate

    def calculate_annual_expense(self):
        if self.expense_frequency == 'monthly':
            return self.expense_amount * 12
        elif self.expense_frequency == 'yearly':
            return self.expense_amount
        else:
            raise ValueError("Invalid expense frequency")

class ExpenseManager:
    def __init__(self, expenses: List[Expense] = None):
        self.expenses = expenses if expenses else []

    def add_expense(self, expense: Expense) -> None:
        self.expenses.append(expense)

    def remove_expense(self, expense: Expense) -> None:
        self.expenses.remove(expense)

    def calculate_total_annual_expense(self) -> float:
        return sum(expense.calculate_annual_expense() for expense in self.expenses)

    def calculate_total_future_expense(self, years: int) -> float:
        return sum(expense.calculate_future_expense(years) for expense in self.expenses)